# Agentic Trading Architecture - Environment Configuration
# Copy this file to .env for local development
# DO NOT commit .env files to version control

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Environment name (development, staging, production)
ENV=development

# Service identifier for logging and metrics
SERVICE_NAME=at-gateway

# HTTP server port
PORT=8001

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# HMAC secret for webhook signature validation
# IMPORTANT: Change this to a strong, random 32+ character secret
# Generate with: openssl rand -base64 32
API_KEY_HMAC_SECRET=change-me-32-bytes-minimum-for-security

# Request replay protection window in seconds
# Requests older than this will be rejected
REPLAY_WINDOW_SEC=300

# Idempotency key cache TTL in seconds
# How long to remember processed requests
IDEMPOTENCY_TTL_SEC=3600

# =============================================================================
# NATS CONFIGURATION
# =============================================================================

# NATS server connection URL
NATS_URL=nats://localhost:4222

# JetStream stream name for trading events
NATS_STREAM=trading-events

# NATS subjects for event publishing
NATS_SUBJECT_SIGNALS_RAW=signals.raw
NATS_SUBJECT_SIGNALS_NORMALIZED=signals.normalized

# Durable consumer name for this service
NATS_DURABLE=gateway-consumer

# =============================================================================
# RATE LIMITING
# =============================================================================

# Maximum requests per second per source
RATE_LIMIT_RPS=100

# Comma-separated list of allowed webhook sources
# Sources must match exactly (case-sensitive)
ALLOWED_SOURCES=tradingview,custom,test

# =============================================================================
# OPERATIONAL CONTROLS
# =============================================================================

# Maintenance mode flag
# Set to 'true' to return 503 for all webhook requests
MAINTENANCE_MODE=false

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Directory for Prometheus multiprocess metrics
# Must be writable by the service process
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================

# Additional configuration for local development
# Uncomment and modify as needed

# Enable debug mode for detailed error responses
# DEBUG=true

# Disable signature validation for testing
# SKIP_SIGNATURE_VALIDATION=false

# Override CORS settings for local frontend development
# CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# For production deployment:
# 1. Generate strong secrets using a secure random generator
# 2. Use a dedicated secret management service (AWS Secrets Manager, etc.)
# 3. Enable TLS for NATS connections
# 4. Set appropriate resource limits and timeouts
# 5. Configure log aggregation and monitoring
# 6. Review and adjust rate limits based on expected traffic
# 7. Set up secret rotation procedures
# 8. Configure backup and disaster recovery

# Example production overrides:
# NATS_URL=nats://nats-cluster.internal:4222
# LOG_LEVEL=WARNING
# RATE_LIMIT_RPS=1000
# PROMETHEUS_MULTIPROC_DIR=/var/lib/prometheus